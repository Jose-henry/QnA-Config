apiVersion: apps/v1
kind: Deployment
metadata:
  name: qna-deployment
  labels:
    app: qna
spec:
  replicas: 2
  selector:
    matchLabels:
      app: qna
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
      labels:
        app: qna
    spec:
      containers:
        - name: qna
          image: qna-image:5.0
          ports:
            - containerPort: 8000
          resources:
            requests:
              cpu: "100m"
            limits:
              cpu: "500m"
          env:
            - name: ENABLE_METRICS
              value: "true"
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: agents-secret
                  key: OPENAI_API_KEY
            - name: GROQ_API_KEY
              valueFrom:
                secretKeyRef:
                  name: agents-secret
                  key: GROQ_API_KEY
            - name: YUGABYTE_DB_URL
              valueFrom:
                configMapKeyRef:
                  name: agents-configmap
                  key: YUGABYTE_DB_URL
            - name: MODEL
              valueFrom:
                configMapKeyRef:
                  name: agents-configmap
                  key: MODEL
            - name: RAG_AGENT_URL
              valueFrom:
                configMapKeyRef:
                  name: agents-configmap
                  key: RAG_AGENT_URL
            - name: OPENAI_MODEL_NAME
              valueFrom:
                configMapKeyRef:
                  name: agents-configmap
                  key: OPENAI_MODEL_NAME

---
apiVersion: v1
kind: Service
metadata:
  name: qna-service
spec:
  selector:
    app: qna
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000

---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: qna-scaledobject
  namespace: default
spec:
  scaleTargetRef:
    name: qna-deployment
  minReplicaCount: 2
  maxReplicaCount: 10
  pollingInterval: 15  # seconds
  cooldownPeriod: 60   # seconds
  triggers:
    - type: prometheus
      metadata:
        serverAddress: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local
        metricName: http_requests_total
        threshold: '0.5'
        query: |
          sum(rate(http_requests_total{job="qna-service", method="POST", handler="/query"}[1m]))
    - type: cpu
      metadata:
        type: Utilization         # or "AverageValue"
        value: "25"               # % CPU per pod before scaling
